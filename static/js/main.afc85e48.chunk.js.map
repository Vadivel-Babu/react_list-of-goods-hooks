{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","sortType","NONE","value","setValue","preparedGoods","goods","visibleGoods","ALPHABET","sort","prev","next","localeCompare","LENGTH","previousGood","nextGood","length","reverse","getReorderedGoods","className","type","onClick","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,iFAZQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAEGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAA0BC,mBAAS,CACjCC,YAAY,EACZC,SAAUL,EAASM,OAFrB,mBAAOC,EAAP,KAAcC,EAAd,KA0BMC,EAvDR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,SAAUD,EACZ,EADYA,WAENO,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,cAAcD,MACrD,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MACX,SAACK,EAAcC,GAAf,OAA4BD,EAAaE,OAASD,EAASC,UAYjE,OAJIhB,GACFO,EAAaU,UAGRV,EA8BeW,CAAkBrB,EAAiBM,GAEzD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWA,IAAU,iBAAkB,CACrC,WAAYhB,EAAMF,WAAaL,EAASY,WAE1Ca,QAhCe,WACrBjB,EAAS,2BAAKD,GAAN,IAAaF,SAAUL,EAASY,aA0BpC,iCAUA,wBACEY,KAAK,SACLD,UAAWA,IAAU,oBAAqB,CACxC,WAAYhB,EAAMF,WAAaL,EAASiB,SAE1CQ,QAtCa,WACnBjB,EAAS,2BAAKD,GAAN,IAAaF,SAAUL,EAASiB,WAgCpC,4BAUA,wBACEO,KAAK,SACLD,UAAWA,IAAU,oBAAqB,CACxC,YAAahB,EAAMH,aAErBqB,QA5CQ,WACdjB,GAAS,SAACkB,GAAD,mBAAC,eACLnB,GADI,IAEPH,YAAasB,EAAMtB,iBAoCjB,sBAUEG,EAAMF,WAAaL,EAASM,MAAQC,EAAMH,aAC1C,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QA9CU,WAClBjB,EAAS,CACPH,SAAUL,EAASM,KACnBF,YAAY,KAwCR,sBAUJ,6BACE,6BACGK,EAAckB,KAAI,SAACC,GAAD,OACjB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cCjIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.afc85e48.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport className from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((prev, next) => prev.localeCompare(next));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort(\n        (previousGood, nextGood) => previousGood.length - nextGood.length,\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [value, setValue] = useState({\n    isReversed: false,\n    sortType: SortType.NONE,\n  });\n  const sortByAlphabet = () => {\n    setValue({ ...value, sortType: SortType.ALPHABET });\n  };\n\n  const sortByLength = () => {\n    setValue({ ...value, sortType: SortType.LENGTH });\n  };\n\n  const reverse = () => {\n    setValue((state) => ({\n      ...value,\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  const handleReset = () => {\n    setValue({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  const preparedGoods = getReorderedGoods(goodsFromServer, value);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={className('button is-info', {\n            'is-light': value.sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={className('button is-success', {\n            'is-light': value.sortType !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={className('button is-warning', {\n            'is-light': !value.isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(value.sortType !== SortType.NONE || value.isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {preparedGoods.map((good) => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}